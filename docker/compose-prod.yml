version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: gcr.io/${GCP_PROJECT}/alpha-me-api:${TAG:-latest}
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - GOOGLE_CLOUD_PROJECT=${GCP_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/service-account.json
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - TWITTER_API_KEY=${TWITTER_API_KEY}
      - TWITTER_API_SECRET=${TWITTER_API_SECRET}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_ENDPOINT}
      - OTEL_SERVICE_NAME=alpha-me-api
    ports:
      - "8000:8000"
    volumes:
      - service-account:/secrets:ro
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker.prod
    image: gcr.io/${GCP_PROJECT}/alpha-me-worker:${TAG:-latest}
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - GOOGLE_CLOUD_PROJECT=${GCP_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/service-account.json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_ENDPOINT}
      - OTEL_SERVICE_NAME=alpha-me-worker
    volumes:
      - service-account:/secrets:ro
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "celery", "-A", "apps.workers.celery_app", "inspect", "ping", "-d", "celery@$$HOSTNAME"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  service-account:
    external: true
    name: alpha-me-service-account 